// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cellaserv.proto

/*
Package cellaserv is a generated protocol buffer package.

It is generated from these files:
	cellaserv.proto
	cellaserv_log.proto

It has these top-level messages:
	Message
	Register
	Request
	Reply
	Subscribe
	Publish
	LogMessage
*/
package cellaserv

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Message_MessageType int32

const (
	Message_Register  Message_MessageType = 0
	Message_Request   Message_MessageType = 1
	Message_Reply     Message_MessageType = 2
	Message_Subscribe Message_MessageType = 3
	Message_Publish   Message_MessageType = 4
)

var Message_MessageType_name = map[int32]string{
	0: "Register",
	1: "Request",
	2: "Reply",
	3: "Subscribe",
	4: "Publish",
}
var Message_MessageType_value = map[string]int32{
	"Register":  0,
	"Request":   1,
	"Reply":     2,
	"Subscribe": 3,
	"Publish":   4,
}

func (x Message_MessageType) String() string {
	return proto.EnumName(Message_MessageType_name, int32(x))
}
func (Message_MessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Reply_Error_Type int32

const (
	Reply_Error_NoError               Reply_Error_Type = 0
	Reply_Error_NoSuchService         Reply_Error_Type = 1
	Reply_Error_InvalidIdentification Reply_Error_Type = 2
	Reply_Error_NoSuchMethod          Reply_Error_Type = 3
	Reply_Error_BadArguments          Reply_Error_Type = 4
	Reply_Error_Timeout               Reply_Error_Type = 5
	// If you use this error type you should explain the error in the
	// 'what' field
	Reply_Error_Custom Reply_Error_Type = 126
)

var Reply_Error_Type_name = map[int32]string{
	0:   "NoError",
	1:   "NoSuchService",
	2:   "InvalidIdentification",
	3:   "NoSuchMethod",
	4:   "BadArguments",
	5:   "Timeout",
	126: "Custom",
}
var Reply_Error_Type_value = map[string]int32{
	"NoError":               0,
	"NoSuchService":         1,
	"InvalidIdentification": 2,
	"NoSuchMethod":          3,
	"BadArguments":          4,
	"Timeout":               5,
	"Custom":                126,
}

func (x Reply_Error_Type) String() string {
	return proto.EnumName(Reply_Error_Type_name, int32(x))
}
func (Reply_Error_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0, 0} }

type Message struct {
	Type Message_MessageType `protobuf:"varint,1,opt,name=type,enum=cellaserv.Message_MessageType" json:"type,omitempty"`
	// This field contains the serialized, actual message:  Register, Request...
	Content []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetType() Message_MessageType {
	if m != nil {
		return m.Type
	}
	return Message_Register
}

func (m *Message) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type Register struct {
	// Name of the service
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Use this field if multiple instances of the service exist
	Identification string `protobuf:"bytes,2,opt,name=identification" json:"identification,omitempty"`
}

func (m *Register) Reset()                    { *m = Register{} }
func (m *Register) String() string            { return proto.CompactTextString(m) }
func (*Register) ProtoMessage()               {}
func (*Register) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Register) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Register) GetIdentification() string {
	if m != nil {
		return m.Identification
	}
	return ""
}

type Request struct {
	ServiceName           string `protobuf:"bytes,1,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	ServiceIdentification string `protobuf:"bytes,2,opt,name=service_identification,json=serviceIdentification" json:"service_identification,omitempty"`
	Method                string `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
	Data                  []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Id                    uint64 `protobuf:"fixed64,99,opt,name=id" json:"id,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Request) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Request) GetServiceIdentification() string {
	if m != nil {
		return m.ServiceIdentification
	}
	return ""
}

func (m *Request) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Request) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Request) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Reply struct {
	Data  []byte       `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error *Reply_Error `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Id    uint64       `protobuf:"fixed64,99,opt,name=id" json:"id,omitempty"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Reply) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Reply) GetError() *Reply_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Reply) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Reply_Error struct {
	Type Reply_Error_Type `protobuf:"varint,1,opt,name=type,enum=cellaserv.Reply_Error_Type" json:"type,omitempty"`
	What string           `protobuf:"bytes,2,opt,name=what" json:"what,omitempty"`
}

func (m *Reply_Error) Reset()                    { *m = Reply_Error{} }
func (m *Reply_Error) String() string            { return proto.CompactTextString(m) }
func (*Reply_Error) ProtoMessage()               {}
func (*Reply_Error) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3, 0} }

func (m *Reply_Error) GetType() Reply_Error_Type {
	if m != nil {
		return m.Type
	}
	return Reply_Error_NoError
}

func (m *Reply_Error) GetWhat() string {
	if m != nil {
		return m.What
	}
	return ""
}

type Subscribe struct {
	// The name of the event the sender of this message is subscribing to
	Event string `protobuf:"bytes,1,opt,name=event" json:"event,omitempty"`
}

func (m *Subscribe) Reset()                    { *m = Subscribe{} }
func (m *Subscribe) String() string            { return proto.CompactTextString(m) }
func (*Subscribe) ProtoMessage()               {}
func (*Subscribe) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Subscribe) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

type Publish struct {
	// The name of the event the sender is publishing
	Event string `protobuf:"bytes,1,opt,name=event" json:"event,omitempty"`
	Data  []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *Publish) Reset()                    { *m = Publish{} }
func (m *Publish) String() string            { return proto.CompactTextString(m) }
func (*Publish) ProtoMessage()               {}
func (*Publish) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Publish) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *Publish) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "cellaserv.Message")
	proto.RegisterType((*Register)(nil), "cellaserv.Register")
	proto.RegisterType((*Request)(nil), "cellaserv.Request")
	proto.RegisterType((*Reply)(nil), "cellaserv.Reply")
	proto.RegisterType((*Reply_Error)(nil), "cellaserv.Reply.Error")
	proto.RegisterType((*Subscribe)(nil), "cellaserv.Subscribe")
	proto.RegisterType((*Publish)(nil), "cellaserv.Publish")
	proto.RegisterEnum("cellaserv.Message_MessageType", Message_MessageType_name, Message_MessageType_value)
	proto.RegisterEnum("cellaserv.Reply_Error_Type", Reply_Error_Type_name, Reply_Error_Type_value)
}

func init() { proto.RegisterFile("cellaserv.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 458 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x93, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0xd7, 0x69, 0xd2, 0x92, 0x49, 0xb7, 0x98, 0x11, 0x5b, 0x05, 0x90, 0x50, 0x37, 0x07,
	0xd4, 0x03, 0x2a, 0x52, 0x57, 0x3c, 0x00, 0x20, 0x90, 0xf6, 0xb0, 0x05, 0xa5, 0x7b, 0x47, 0x69,
	0x32, 0xb4, 0x96, 0x92, 0xb8, 0xc4, 0x4e, 0x51, 0x2f, 0xfb, 0x2a, 0x5c, 0xf7, 0x61, 0x78, 0x28,
	0x14, 0x27, 0x4d, 0xd3, 0x55, 0x4f, 0xb1, 0xc7, 0xdf, 0xfc, 0x1e, 0xff, 0x33, 0x81, 0xe7, 0x31,
	0xa5, 0x69, 0xa4, 0xa8, 0xd8, 0xcd, 0xb6, 0x85, 0xd4, 0x12, 0xdd, 0x36, 0x10, 0x3c, 0x32, 0x18,
	0xdc, 0x91, 0x52, 0xd1, 0x9a, 0x70, 0x0e, 0xb6, 0xde, 0x6f, 0xc9, 0x67, 0x13, 0x36, 0x1d, 0xcd,
	0xdf, 0xce, 0x8e, 0x69, 0x0d, 0x71, 0xf8, 0xde, 0xef, 0xb7, 0x14, 0x1a, 0x16, 0x7d, 0x18, 0xc4,
	0x32, 0xd7, 0x94, 0x6b, 0xdf, 0x9a, 0xb0, 0xe9, 0x30, 0x3c, 0x6c, 0x83, 0xef, 0xe0, 0x75, 0x70,
	0x1c, 0xc2, 0xb3, 0x90, 0xd6, 0x42, 0x69, 0x2a, 0xf8, 0x05, 0x7a, 0x30, 0x08, 0xe9, 0x77, 0x49,
	0x4a, 0x73, 0x86, 0x2e, 0x38, 0x21, 0x6d, 0xd3, 0x3d, 0xb7, 0xf0, 0x12, 0xdc, 0x65, 0xb9, 0x52,
	0x71, 0x21, 0x56, 0xc4, 0x7b, 0x15, 0xf6, 0xa3, 0x5c, 0xa5, 0x42, 0x6d, 0xb8, 0x1d, 0x7c, 0x3b,
	0x2a, 0x20, 0x82, 0x9d, 0x47, 0x59, 0x5d, 0xaa, 0x1b, 0x9a, 0x35, 0xbe, 0x83, 0x91, 0x48, 0x28,
	0xd7, 0xe2, 0x97, 0x88, 0x23, 0x2d, 0x64, 0x6e, 0x2a, 0x72, 0xc3, 0x27, 0xd1, 0xe0, 0x2f, 0x6b,
	0x2f, 0xc7, 0x6b, 0x18, 0x56, 0x0f, 0x14, 0x31, 0xfd, 0xec, 0xe8, 0x79, 0x4d, 0x6c, 0x51, 0xc9,
	0x7e, 0x84, 0xf1, 0x01, 0x39, 0x2b, 0x7f, 0xd5, 0x9c, 0xde, 0x9e, 0x1c, 0xe2, 0x18, 0xfa, 0x19,
	0xe9, 0x8d, 0x4c, 0xfc, 0x9e, 0xc1, 0x9a, 0x5d, 0x55, 0x79, 0x12, 0xe9, 0xc8, 0xb7, 0x8d, 0x5b,
	0x66, 0x8d, 0x23, 0xb0, 0x44, 0xe2, 0xc7, 0x13, 0x36, 0xed, 0x87, 0x96, 0x48, 0x82, 0x47, 0xab,
	0x71, 0xa4, 0xa5, 0x59, 0x87, 0x7e, 0x0f, 0x0e, 0x15, 0x85, 0x2c, 0xcc, 0xfd, 0xde, 0x7c, 0xdc,
	0xe9, 0x93, 0x49, 0x9a, 0x7d, 0xad, 0x4e, 0xc3, 0x1a, 0x7a, 0xaa, 0xfd, 0xfa, 0x1f, 0x03, 0xc7,
	0x00, 0xf8, 0xe1, 0xa4, 0xdd, 0x6f, 0xce, 0xcb, 0xcc, 0x3a, 0xbd, 0x46, 0xb0, 0xff, 0x6c, 0x22,
	0xdd, 0xbc, 0xdb, 0xac, 0x83, 0x07, 0xb0, 0x4d, 0x7b, 0x3d, 0x18, 0x2c, 0xa4, 0xc9, 0xe0, 0x17,
	0xf8, 0x02, 0x2e, 0x17, 0x72, 0x59, 0xc6, 0x9b, 0x65, 0x6d, 0x0d, 0x67, 0xf8, 0x0a, 0xae, 0x6e,
	0xf3, 0x5d, 0x94, 0x8a, 0xe4, 0xd4, 0x27, 0x6e, 0x21, 0x87, 0x61, 0x4d, 0xdf, 0x19, 0x87, 0x78,
	0xaf, 0x8a, 0x7c, 0x8e, 0x92, 0x4f, 0xc5, 0xba, 0xcc, 0x28, 0xd7, 0x8a, 0xdb, 0x95, 0xfc, 0xbd,
	0xc8, 0x48, 0x96, 0x9a, 0x3b, 0x08, 0xd0, 0xff, 0x52, 0x2a, 0x2d, 0x33, 0xfe, 0x10, 0x5c, 0x77,
	0x06, 0x06, 0x5f, 0x82, 0x43, 0xbb, 0x6a, 0x14, 0xeb, 0x36, 0xd6, 0x9b, 0xe0, 0xa6, 0x1d, 0xa2,
	0xf3, 0x40, 0x6b, 0xb2, 0x75, 0x34, 0x79, 0xd5, 0x37, 0x7f, 0xca, 0xcd, 0xff, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x28, 0x0a, 0x2d, 0xf6, 0x3c, 0x03, 0x00, 0x00,
}
